// Объекты
let objects = {
    // Свойства объекта также иногда называют полями объекта.
    // У каждого свойства есть ключ (также называемый «имя» или «идентификатор»). 
    // После имени свойства следует двоеточие ":", и затем указывается значение свойства.
    key1: "value",
    // Имя свойства может состоять из нескольких слов, но тогда оно должно быть заключено в кавычки
    "full name": "Shulha Ihor",

}

objects.test = true; // delete

let user = new Object(); // синтаксис "конструктор объекта"
// Для обращения к свойствам используется запись «через точку»:
// alert(objects.key);
// alert(objects.test);
console.log(objects["full name"]);

let p = prompt("What do you know?", "key1");
console.log( objects[p] );
console.log(objects.p);

let fruit = prompt("", "apple");
let bag = {
    // Мы можем использовать квадратные скобки в литеральной нотации для создания вычисляемого свойства.
    [fruit]: 5,  // имя свойства будет взято из переменной fruit

    /**
     * Квадратные скобки дают намного больше возможностей, чем запись через точку. 
     * Они позволяют использовать любые имена свойств и переменные, хотя и требуют 
     * более громоздких конструкций кода.
     * 
     * Подведём итог: в большинстве случаев, когда имена свойств известны и просты, используется запись через точку. 
     * Если же нам нужно что-то более сложное, то мы используем квадратные скобки.
     */

}


let car = {
    model: "Porshe",
    price: 10000,
    color: "red",
    
}

car.isAvailable = true;

    // Проверка существования свойства
    // "key" in object
    // Цикл «for…in»
    //for (key in object) {
        // тело цикла выполняется для каждого свойства объекта
    //  }

    for (let key in car){
        console.log(key);
        console.log(car[key])
    }

    // Копирование по ссылке
    /**
     * Одним из фундаментальных отличий объектов от примитивных типов данных является то, 
     * что они хранятся и копируются «по ссылке».
     * Переменная хранит не сам объект, а его «адрес в памяти», другими словами «ссылку» на него.
     * 
     * Операторы равенства == и строгого равенства === для объектов работают одинаково.
     * Два объекта равны только в том случае, если это один и тот же объект.
     * Объект, объявленный через const, может быть изменён.
     */
    let test = {name: "Test"}
    let test1 = test;
    test1.name = "test1";
    console.log(test);

    // Клонирование и объединение объектов, Object.assign
    /**
     * 
     */

     /**
      * ===Итог:
      * Объекты – это ассоциативные массивы с рядом дополнительных возможностей.
      * Они хранят свойства (пары ключ-значение), где:
           Ключи свойств должны быть строками или символами (обычно строками).
           Значения могут быть любого типа.

           Чтобы получить доступ к свойству, мы можем использовать:
                Запись через точку: obj.property.
                Квадратные скобки obj["property"]. 
                Квадратные скобки позволяют взять ключ из переменной, например, obj[varWithKey].
      */